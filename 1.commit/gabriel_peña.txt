1. ¿Cómo se inicializa un repositorio local? (que comando se debe ejecutar?)
    git init
        
2. ¿Cómo hago para que un directorio deje de ser controlado por git? (que comando se debe ejecutar?)
    rm -r .git

3. Si agrego un archivo a un directorio que ya está siendo controlado por git, ¿está siendo controlado por git?
    Hasta el momento en el que no se haga un git add -A, git aun no controlara ese archivo

4. ¿Qué comando se utiliza para agregar un archivo al repositorio local?
    git add nombre-del-archivo

5. ¿Cómo determino que archivos fueron modificados? (que comando se debe ejecutar?)
    git status

6. ¿Qué comando se utiliza para hacer un commit?
    git commit -m "Aqui la nota del commit"

7. En sus propias palabras, ¿qué es un commit?
    Para mi es como si se guardaran los cambios que se han hecho en los archivos y se creara una forma de regresar a ellos
    en caso de que se presentara cualquier tipo de problema en el futuro




En la rama gabriel_peña
Cambios no rastreados para el commit:
  (usa "git add <archivo>..." para actualizar lo que será confirmado)
  (usa "git restore <archivo>..." para descartar los cambios en el directorio de trabajo)
	modificados:     sandwich.txt

Archivos sin seguimiento:
  (usa "git add <archivo>..." para incluirlo a lo que será confirmado)
	"gabriel_pe\303\261a.txt"

sin cambios agregados al commit (usa "git add" y/o "git commit -a")

    el archivo sandwich ya esta siendo rastreado por git ya que hubo un commit anterios, el archivo gabriel_peña es un archivo que al ser nuevo no esta siendo rastreado por git

En la rama gabriel_peña
Cambios a ser confirmados:
  (usa "git restore --staged <archivo>..." para sacar del área de stage)
	modificados:     sandwich.txt

Archivos sin seguimiento:
  (usa "git add <archivo>..." para incluirlo a lo que será confirmado)
	"gabriel_pe\303\261a.txt"

    Al efectuar el git add sandwich.txt, ya el archivo pasa al stagin area de git, pero no se a agregado el archivo gabriel_peña

En la rama gabriel_peña
Archivos sin seguimiento:
  (usa "git add <archivo>..." para incluirlo a lo que será confirmado)
	"gabriel_pe\303\261a.txt"
    
    Al hacer git commit -m "Agrego mi sandwich.txt" a dejalo el archivo sandwich del stagin area, pero el archivo gabriel_peña sigue estando en el working directory

commit f009f68949c0df8c1dae72f67254ab3b82942f4d (HEAD -> gabriel_peña)
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 12:08:51 2025 -0500

    agrego salsas

commit 22f7cbf3a2de4d03608342a098eb6affab501c11
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 11:53:59 2025 -0500

    agrego mi sandwich.txt

commit fafdc7f0bd9a9a556a616c14ff783605909f3803 (origin/practica2025, origin/main, origin/HEAD, practica2025, main)
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:45:03 2025 -0500

    cambio readme.md

commit 5d6dc694d95afb33114a820339acfeeab38cc42a
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:39:56 2025 -0500

    cambio de rama master a main en documentación

commit 3f74d4d0db34f6f6fbcd9f8cfa4b157dccdd48d7
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:17:02 2025 -0500

    primer commit
    
 Los commit aparecen en orden en el que fueron hechos, ademas aparecen los commits de otras ramas y en que rama estoy


f009f68 (HEAD -> gabriel_peña) agrego salsas
22f7cbf agrego mi sandwich.txt
fafdc7f (origin/practica2025, origin/main, origin/HEAD, practica2025, main) cambio readme.md
5d6dc69 cambio de rama master a main en documentación
3f74d4d primer commit

    el comando git log --oneline muestra el historial de commits en un formato compacto


commit f009f68949c0df8c1dae72f67254ab3b82942f4d (HEAD -> gabriel_peña)
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 12:08:51 2025 -0500

    agrego salsas

 1.commit/sandwich.txt | 2 ++
 1 file changed, 2 insertions(+)

 1.commit/sandwich.txt | 2 ++
 1 file changed, 2 insertions(+)

commit 22f7cbf3a2de4d03608342a098eb6affab501c11
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 11:53:59 2025 -0500

    agrego mi sandwich.txt

 1.commit/sandwich.txt | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit fafdc7f0bd9a9a556a616c14ff783605909f3803 (origin/practica2025, origin/main, origin/HEAD, practica2025, main)
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:45:03 2025 -0500

    cambio readme.md

 README.md | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5d6dc694d95afb33114a820339acfeeab38cc42a
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:39:56 2025 -0500

    cambio de rama master a main en documentación

 2.branchs/README.md   | 16 ++++++++--------
 3.conflicts/README.md | 10 +++++-----
 README.md             |  7 +++++--
 3 files changed, 18 insertions(+), 15 deletions(-)

commit 3f74d4d0db34f6f6fbcd9f8cfa4b157dccdd48d7
Author: Franklin Jimenez <f.jimenezg@hotmail.com>
Date:   Mon Feb 17 23:17:02 2025 -0500

    primer commit

 .gitignore               |  2 ++
 1.commit/README.md       | 55 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1.commit/sandwich.txt    |  4 ++++
 2.branchs/README.md      | 78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2.branchs/pizza.txt      |  3 +++
 3.conflicts/README.md    | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 3.conflicts/milanesa.txt |  2 ++
 README.md                | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 8 files changed, 246 insertions(+)

    el comando git log --stat muestra el historial de commits junto con información sobre las modificaciones realizadas en cada uno, especificamente en cuanto a los archivos que     fueron modificados, agregados o eliminados. Además, proporciona estadisticas sobre los cambios en el contenido de los archivos    

En la rama gabriel_peña
Cambios a ser confirmados:
  (usa "git restore --staged <archivo>..." para sacar del área de stage)
	renombrados:     sandwich2.txt -> sandwich2_feo.txt

Archivos sin seguimiento:
  (usa "git add <archivo>..." para incluirlo a lo que será confirmado)
	"gabriel_pe\303\261a.txt"

    Solamente al cambiar el nombre de sandwich2 a sandwich2_feo esta esperando a que se haga otro commit ya que solamente se a cambiado el nombre y nada de su contenido

En la rama gabriel_peña
Cambios a ser confirmados:
  (usa "git restore --staged <archivo>..." para sacar del área de stage)
	borrados:        sandwich2_feo.txt

Archivos sin seguimiento:
  (usa "git add <archivo>..." para incluirlo a lo que será confirmado)
	"gabriel_pe\303\261a.txt"

    Al eliminar el archivo sandwich2_feo nos pide volver a crear un commit, ya que es un cambio a nivel de repositorio 

51d2ddb (HEAD -> gabriel_peña) se a eliminado sandwich2_feo
7d29cc4 se cambio de nombre de sandwich2 a sandwich2_feo
ebb131b agrego sandwich2.txt
f009f68 agrego salsas
22f7cbf agrego mi sandwich.txt
fafdc7f (origin/practica2025, origin/main, origin/HEAD, practica2025, main) cambio readme.md
5d6dc69 cambio de rama master a main en documentación
3f74d4d primer commit

commit 51d2ddbdbd3cb36a2aff1cee863c2391d464716e (HEAD -> gabriel_peña)
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 12:25:13 2025 -0500

    se a eliminado sandwich2_feo

 1.commit/sandwich2_feo.txt | 10 ----------
 1 file changed, 10 deletions(-)

commit 7d29cc4dfe08a83b032165bd06cc8c4f6f974652
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 12:23:08 2025 -0500

    se cambio de nombre de sandwich2 a sandwich2_feo

 1.commit/{sandwich2.txt => sandwich2_feo.txt} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)

commit ebb131be7a7e65efcb95674889a371a002f577a0
Author: Ubukaze1 <gabo2060@hotmail.com>
Date:   Tue Feb 18 12:20:04 2025 -0500

    agrego sandwich2.txt

 1.commit/sandwich2.txt | 10 ++++++++++
 1 file changed, 10 insertions(+)
    
    En este caso copio los ultimos 3 commits donde se ve que se a creado el archivo sandwich2 que se ha cambiodo el nombre a sandwich2_feo y como se ha eliminado el archivo

1. ¿Qué es un conflicto? Cuando ocurre? ¿Es bueno o malo?
    Un conflicto en Git ocurre cuando dos o más cambios en el mismo archivo no pueden fusionarse automáticamente
    Esto sucede porque Git no puede determinar qué versión del código debe ir

    Ocurre cunado queremos hacer un Merge, Al hacer un pull que trae cambios remotos que entran en conflicto

    Ni bueno ni malo Los conflictos son inevitables en proyectos colaborativos y nos indican un error, el cual se puede solucionar

2. ¿Se puede evitar un conflicto? ¿Cómo?
    Se puede evitar actualizando frecuentemente, haciendo pull o creando ramas especificas para trabajar en ciertos archivos






